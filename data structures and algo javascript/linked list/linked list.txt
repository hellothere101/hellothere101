// let mylinkedlist={
//   head:{
//     value:10,
//     next:{
//       value:5,
//       next:{
//         value:16,
//         next: null;
//       }
//     }
//   }
// }
class linkedlist{
  constructor(value){
    this.head={
      value: value,
      next: null
    }
    this.tail=this.head;
    this.length=1;
  }
  append(value){
    const newnode={
      value:value,
      next: null
    }
    this.tail.next=newnode;
    this.tail=newnode;
    this.length++;
    return this;
  }
  prepend(value){
    const f={
      value:value,
      next:null
    }
    f.next=this.head;
    this.head=f;
    this.length++;
    return this;
  }
  printlist(){
   let  currentnode=this.head;
    while(currentnode!=null){
      console.log(currentnode.value);
      currentnode=currentnode.next;
    }
  }
  insert(value,index){
    let node;
    let ptr=this.head;
    node={
      value:value,
      next: null
    }
    for(let i=0;i<index-1;i++){
      ptr=ptr.next;
    }
    node.next=ptr.next;
    ptr.next=node;
    this.length++;
    return this;
  }
  remove(index){
    let ptr=this.head;
    let q=this.head.next
     for(let i=0;i<index-1;i++){
      ptr=ptr.next;
      q=q.next;
    }
    ptr.next=q.next;
    delete q.value;
    this.length--;
    return this;
  }
}
const mylinkedlist= new linkedlist(10);
mylinkedlist.append(5);
mylinkedlist.append(16);
mylinkedlist.prepend(9);
mylinkedlist.insert(23,2);
mylinkedlist.remove(2);
mylinkedlist.printlist();